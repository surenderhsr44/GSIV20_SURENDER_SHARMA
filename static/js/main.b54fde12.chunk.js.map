{"version":3,"sources":["helper/baseURL.js","helper/const.js","redux-container/movie/action.js","redux-container/movie/type.js","component/header/header.js","component/movie/movie.js","redux-container/movie/reducer.js","redux-container/combineReducer.js","redux-container/store.js","component/MovieCard/MovieCard.js","component/movieList/movieList.js","component/home/home.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","APIKEY","getMovieList","dispatch","a","type","get","then","response","console","log","status","payload","data","items","catch","error","Header","props","onsearchMovie","event","target","id","value","setState","length","GetMovieList","onSearchClick","e","preventDefault","GetMovieListBySearching","state","movieName","className","this","searchBar","onChange","placeholder","aria-label","onClick","to","title","process","Component","connect","movieList","movie","name","results","getMovieListBySearching","Movie","GetMovieDetailById","sessionStorage","getItem","movieDetail","src","poster_path","alt","vote_average","release_date","runtime","overview","getMovieDetailById","movieReducer","isLoader","action","createRootReducer","history","combineReducers","router","connectRouter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createBrowserHistory","createStore","applyMiddleware","reduxThunk","routerMiddleware","MovieCard","key","style","backgroundSize","backgroundImage","image_path","display","rating","description","substring","MovieList","componentDidMount","loader","onClickDetail","setItem","push","map","item","index","Home","App","exact","path","Boolean","location","hostname","match","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b54fde12.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://api.themoviedb.org/'\n})","export const APIKEY = 'f274c2a93384510e35da50f38e1e97fe'","import baseURL from '../../helper/baseURL';\nimport {APIKEY} from '../../helper/const'\nimport {  GET_MOVIE_LIST_REQUEST, GET_MOVIE_DETAIL_REQUEST, REQUEST_FAILURE, FETCH_REQUEST } from './type'\n\n\nexport const getMovieList = () => async (dispatch) => {\n    dispatch({ type: FETCH_REQUEST})\n    await baseURL.get(`3/list/1?api_key=${APIKEY}` )\n    .then(response=>\n        {\n            console.log(response)\n            if(response.status===200)\n            {\n                dispatch({ type: GET_MOVIE_LIST_REQUEST, payload: response.data.items });\n            }\n        })\n        .catch(error=>\n            {\n                console.log(error.response.data['message'])\n             dispatch({type:REQUEST_FAILURE,payload:error.response.data['message']});\n            })\n}\n\nexport const getMovieListBySearching = (name) => async (dispatch) => {\n    dispatch({ type: FETCH_REQUEST})\n    await baseURL.get(`3/search/movie?api_key=${APIKEY}&language=en-US&query=${name}` )\n    .then(response=>\n        {\n            console.log(response)\n            if(response.status===200)\n            {\n                dispatch({ type: GET_MOVIE_LIST_REQUEST, payload: response.data.results });\n            }\n        })\n        .catch(error=>\n            {\n                console.log(error.response.data['message'])\n             dispatch({type:REQUEST_FAILURE,payload:error.response.data['message']});\n            })\n}\nexport const getMovieDetailById = (id) => async (dispatch) => {\n    dispatch({ type: FETCH_REQUEST})\n    await baseURL.get(`3/movie/${id}?api_key=${APIKEY}&language=en-US` )\n    .then(response=>\n        {\n            console.log(response)\n            if(response.status===200)\n            {\n                dispatch({ type: GET_MOVIE_DETAIL_REQUEST, payload: response.data });\n            }\n        })\n        .catch(error=>\n            {\n                console.log(error.response.data['message'])\n             dispatch({type:REQUEST_FAILURE,payload:error.response.data['message']});\n            })\n}\n","export const GET_MOVIE_LIST_REQUEST ='GET_MOVIE_LIST_REQUEST';\nexport const GET_MOVIE_DETAIL_REQUEST = 'GET_MOVIE_DETAIL_REQUEST';\nexport const REQUEST_FAILURE='REQUEST_FAILURE';\nexport const FETCH_REQUEST='FETCH_REQUEST';","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport './header.css'\n\nimport { getMovieList, getMovieListBySearching } from '../../redux-container/movie/action'\n\n\nclass Header extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      movieName: \"\"\n    }\n  }\n\n  onsearchMovie = (event) => {\n    const { id, value } = event.target\n    this.setState({ [id]: value });\n    if (value.length < 2) {\n      this.props.GetMovieList()\n    }\n\n  }\n  onSearchClick = (e) => {\n    e.preventDefault()\n    this.props.GetMovieListBySearching(this.state.movieName)\n  }\n  render() {\n    return <div>\n      <nav className=\"navbar navbar-light bg-light justify-content-between\">\n      {this.props.searchBar &&<form className=\"form-inline\">\n        <input className=\"form-control mr-sm-2\" type=\"search\" id=\"movieName\" value={this.state.movieName} onChange={this.onsearchMovie} placeholder=\"Search\" aria-label=\"Search\" />\n        <button onClick={this.onSearchClick} className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n      </form>}\n  <Link to='#' className=\"navbar-brand\">{this.props.title}</Link>\n  <Link to={`${process.env.PUBLIC_URL}/`} className=\"navbar-brand\">Home</Link>\n\n\n      </nav></div>;\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  console.log(state)\n  return {\n    movieList: state.movie.movieList\n\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    GetMovieList: () => dispatch(getMovieList()),\n    GetMovieListBySearching: (name) => dispatch(getMovieListBySearching(name))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React, { Component } from 'react';\nimport './movie.css'\nimport { connect } from 'react-redux';\nimport Header from '../header'\n\nimport { getMovieDetailById } from '../../redux-container/movie/action'\n\nclass Movie extends Component {\n    componentDidMount() {\n        this.props.GetMovieDetailById(sessionStorage.getItem('movieId'))\n    }\n\n    render() {\n        console.log(this.props.movieList)\n        const { movieDetail } = this.props\n        return <div>\n            <div className=\"container-fluid\">\n                <Header searchBar={false} title=\"Movie Details\" />\n\n                {movieDetail && <div className=\"wrapper\">\n\n                    <div className=\"main_card\">\n                        <div className=\"card_right\">\n                            <div className=\"img_container\">\n                                <img src={`https://image.tmdb.org/t/p/w440_and_h660_face${movieDetail.poster_path}`} alt=\"\" />\n                            </div>\n                        </div>\n                        <div className=\"card_datails\">\n                            <h1>{movieDetail.title} ({movieDetail.vote_average})</h1>\n                            <div className=\"card_cat\">\n                                <p className=\"genre\">{movieDetail.release_date} | {movieDetail.runtime} | Director </p>\n                            </div>\n                            <p className=\"genre1\">Cast: Actor1,Actor3,Actor3 </p>\n                            <p className=\"disc\">{movieDetail.overview}</p>\n\n                        </div>\n                    </div>\n\n                </div>}\n            </div>\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return {\n        movieDetail: state.movie.movieDetail\n\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        GetMovieDetailById: (id) => dispatch(getMovieDetailById(id)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movie);","import { GET_MOVIE_LIST_REQUEST,GET_MOVIE_DETAIL_REQUEST,  REQUEST_FAILURE, FETCH_REQUEST } from './type'\nconst movieReducer = (state = { isLoader: true }, action) => {\n    switch (action.type) {\n        case FETCH_REQUEST:\n            return {\n                ...state,\n                isLoader: true,\n            }\n      \n        case GET_MOVIE_LIST_REQUEST:\n            return {\n                ...state,\n                movieList: action.payload,\n                isLoader: false,\n            }\n        case GET_MOVIE_DETAIL_REQUEST :\n            return{\n                ...state,\n                movieDetail:action.payload\n            }\n        case REQUEST_FAILURE:\n            return {\n                ...state,\n                error: action.payload,\n                isLoader: false,\n\n            }\n        default: return state;\n    }\n\n}\nexport default movieReducer;","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport movieReducer from './movie/reducer';\n\nconst createRootReducer = (history) => combineReducers({\n    movie:movieReducer,\n  \n    router: connectRouter(history),\n  \n})\nexport default createRootReducer\n","\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport createRootReducer from './combineReducer';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nexport const history = createBrowserHistory();\nconsole.log(history);\nexport default createStore(\n    createRootReducer(history),\n    composeEnhancers(applyMiddleware(reduxThunk, routerMiddleware(history),\n    ))\n)\n","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nconst MovieCard = props => {\n\n    return <div className=\"movie-card\" key={props.id} onClick={() => props.onClick(props.id)}>\n    <div className=\"movie-header \" style={{ backgroundSize: 'cover', backgroundImage: `url(\"https://image.tmdb.org/t/p/w440_and_h660_face${props.image_path}\")` }}>\n  \n    </div>\n    <div className=\"movie-content\">\n      <div className=\"movie-content-header\">\n        <Link style={{ display: 'inline' }} to=\"#\">\n          <h3 className=\"movie-title\">{props.title}</h3>\n        </Link>\n        <div className=\"imax-logo\">{props.rating}</div>\n      </div>\n      <div className=\"movie-info\">\n        <div className=\"info-section\">\n          <span>{props.description.substring(0, 80)}{props.description.length > 80 && <span>.....</span>}</span>\n  \n        </div>\n  \n      </div>\n    </div>\n  </div>;\n  }\n\n\nexport default MovieCard;\n","import React, { Component } from 'react';\nimport './movieList.css'\nimport { connect } from 'react-redux';\nimport { history } from '../../redux-container/store'\nimport Header from '../header'\nimport MovieCard from '../MovieCard'\n\nimport { getMovieList } from '../../redux-container/movie/action'\n\n\n\n// \nclass MovieList extends Component {\n  constructor(props){\n    super(props);\n    this.state={loader:false}\n  }\n  componentDidMount =async()=> {\n   this.setState({loader:true});\n    await this.props.getMovieList()\n   this.setState({loader:false});\n\n  }\n\n  onClickDetail = (id) => {\n    console.log(id)\n    sessionStorage.setItem('movieId', id)\n    history.push(process.env.PUBLIC_URL+'/movie')\n  }\n  render() {\n    console.log(this.props.movieList)\n    const { movieList } = this.props\n    if (this.state.loader) {\n      return <div className='loader'>\n\n      </div>\n    }\n    return <div>\n      <div className=\"container-fluid\">\n        <Header searchBar={true} />\n        <div className=\"container1\">\n          {movieList && movieList.map((item, index) => {\n            return <span key={item.id}><MovieCard \n            id={item.id}\n            image_path={item.poster_path}\n            title={item.title}\n            rating={item.vote_average}\n            description={item.overview}\n            onClick={this.onClickDetail}\n            /></span>\n\n          })}\n        </div>\n\n      </div>\n    </div>\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state)\n  return {\n    movieList: state.movie.movieList\n\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    getMovieList: () => dispatch(getMovieList()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieList);","import React, { Component } from 'react';\nimport './home.css'\n\nclass Home extends Component {\n  render() {\n    return <div className='container'>\n      <div className='row' >\n\n        <div className='col-md-2' >\n          <div className='card'>\n            Notification\n        </div>\n        </div>\n        <div className='col-md-7' >   <div className='card'>\n            Notification\n        </div></div>\n\n        <div className='col-md-3' >   <div className='card'>\n            Notification\n        </div></div>\n\n      </div>\n      Home</div>;\n  }\n}\n\nexport default Home;\n","import React, { Component, Fragment } from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router'\nimport { connect } from 'react-redux';\nimport Movie from './component/movie'\nimport Movielist from './component/movieList';\nimport Home from './component/home'\n\nclass App extends Component {\n  render() {\n    console.log(process.env.PUBLIC_URL)\n    return (\n      <Fragment>\n        <Switch>\n          <Route exact path={`${process.env.PUBLIC_URL}/movie`}>\n            <Movie />\n          </Route>\n          <Route exact path={`${process.env.PUBLIC_URL}/home`}>\n<Home />\n            </Route>\n          <Route exact path={`${process.env.PUBLIC_URL}/`}>\n            <Movielist />\n          </Route>\n        </Switch>\n\n      </Fragment>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n\n\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    // getUserData:() => dispatch(getUserData()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\n// import { Route, Switch } from 'react-router' // react-router v4/v5\nimport { ConnectedRouter } from 'connected-react-router'\n\nimport store, { history } from './redux-container/store';\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n      <App/>\n      </ConnectedRouter>\n    \n  </Provider>,\n\n document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}